(function() {var implementors = {};
implementors["core"] = [];
implementors["proc_macro"] = ["impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"proc_macro/enum.Level.html\" title=\"enum proc_macro::Level\">Level</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Diagnostic.html\" title=\"struct proc_macro::Diagnostic\">Diagnostic</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.LexError.html\" title=\"struct proc_macro::LexError\">LexError</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Span.html\" title=\"struct proc_macro::Span\">Span</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.LineColumn.html\" title=\"struct proc_macro::LineColumn\">LineColumn</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.SourceFile.html\" title=\"struct proc_macro::SourceFile\">SourceFile</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.TokenTree.html\" title=\"struct proc_macro::TokenTree\">TokenTree</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"proc_macro/enum.TokenNode.html\" title=\"enum proc_macro::TokenNode\">TokenNode</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"proc_macro/enum.Delimiter.html\" title=\"enum proc_macro::Delimiter\">Delimiter</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Term.html\" title=\"struct proc_macro::Term\">Term</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"proc_macro/enum.Spacing.html\" title=\"enum proc_macro::Spacing\">Spacing</a>","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Literal.html\" title=\"struct proc_macro::Literal\">Literal</a>",];
implementors["std_unicode"] = ["impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"std_unicode/char/struct.UnicodeVersion.html\" title=\"struct std_unicode::char::UnicodeVersion\">UnicodeVersion</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"std_unicode/str/struct.SplitWhitespace.html\" title=\"struct std_unicode::str::SplitWhitespace\">SplitWhitespace</a>&lt;'a&gt;","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"std_unicode/char/struct.DecodeUtf16Error.html\" title=\"struct std_unicode::char::DecodeUtf16Error\">DecodeUtf16Error</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"std_unicode/lossy/struct.Utf8LossyChunk.html\" title=\"struct std_unicode::lossy::Utf8LossyChunk\">Utf8LossyChunk</a>&lt;'a&gt;","impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"std_unicode/lossy/struct.Utf8Lossy.html\" title=\"struct std_unicode::lossy::Utf8Lossy\">Utf8Lossy</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
